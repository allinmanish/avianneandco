<?php
 /**
 * GoMage LightCheckout Extension
 *
 * @category     Extension
 * @copyright    Copyright (c) 2010-2012 GoMage (http://www.gomage.com)
 * @author       GoMage
 * @license      http://www.gomage.com/license-agreement/  Single domain license
 * @terms of use http://www.gomage.com/terms-of-use
 * @version      Release: 3.2
 * @since        Class available since Release 2.4
 */
?>
<?php if ($this->getCanUseRewardPoints()): ?>
<dl class="sp-methods checkout-reward checkout-onepage-payment-additional-reward" id="reward_placer">
    <dt>
        <input type="checkbox" name="payment[use_reward_points]" value="1" id="use_reward_points"<?php echo $this->useRewardPoints()?' checked="checked"':'' ?> class="checkbox" />
        <label for="use_reward_points"><?php echo Mage::helper('enterprise_reward')->__('Use my reward points, %s available', Mage::helper('enterprise_reward')->formatReward($this->getPointsBalance(), $this->getCurrencyAmount())); ?></label>
    </dt>
</dl>
<script type="text/javascript">
//<![CDATA[
	
    quoteBaseGrandTotal = <?php echo (float)$this->getQuote()->getBaseGrandTotal(); ?>;

    var isEnoughPointsToCoverAmount = <?php if ($this->isEnoughPoints()): ?>true<?php else: ?>false<?php endif; ?>;
    var rewardPointsSubstracted = <?php if ($this->useRewardPoints()): ?>true<?php else: ?>false<?php endif; ?>;

    if (rewardPointsSubstracted) {
        quoteBaseGrandTotal += <?php echo (float)$this->getQuote()->getBaseRewardCurrencyAmount(); ?>;
        rewardPointsSubstracted = false;
    }

    paymentForm.prototype.switchRewardPointsCheckbox = function() {		
        if (!rewardPointsSubstracted && $('use_reward_points').checked) {
            quoteBaseGrandTotal -= <?php echo (float)$this->getCurrencyAmount(); ?>;
            rewardPointsSubstracted = true;
        } else if (rewardPointsSubstracted && !$('use_reward_points').checked) {
            quoteBaseGrandTotal += <?php echo (float)$this->getCurrencyAmount(); ?>;
            rewardPointsSubstracted = false;
        }
        if (quoteBaseGrandTotal < 0.0001) {
            var elements = Form.getElements(this.form);
            for (var i=0; i<elements.length; i++) {
                if ($('use_reward_points').checked) {
                    if (elements[i].name == 'payment[method]') {
                        elements[i].disabled = true;
                    }
                }
                if (elements[i].name == 'payment[method]' && elements[i].value == 'free') {
                    elements[i].checked = false;
                    elements[i].disabled = true;
                    $(elements[i].parentNode).hide();
                }
            }
            if ($('use_reward_points').checked) {
                $('checkout-payment-method-load').hide();
            }
        } else {
            var elements = Form.getElements(this.form);
            for (var i=0; i<elements.length; i++) {
                if (elements[i].name == 'payment[method]') {
                    elements[i].disabled = false;
                }
            }
            $('checkout-payment-method-load').show();
        }
    }
    if (payment) {
        var rewardPaymentInit = function() {
            if ($('use_reward_points')) {
                $('use_reward_points').disabled = false;
            }
            this.switchRewardPointsCheckbox();            
        }
        payment.addAfterInitFunction('reward', rewardPaymentInit.bind(payment));        
    }
    if ($('use_reward_points') && typeof(checkout) != 'undefined') {
		$('use_reward_points').observe('click', function(e){
			checkout.submit(checkout.getFormData(), 'get_totals');
    	});
	}	    
//]]>
</script>
<?php endif; ?>
